apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "seafile.fullname" . }}
  labels:
{{ include "seafile.labels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "seafile.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "seafile.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
        - name: {{ .Values.persistence.databaseVolumeName }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.databaseVolumeName }}
        - name: {{ .Values.persistence.dataVolumeName }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.dataVolumeName }}
      containers:
        - name: seafile-mysql
          image: {{ .Values.db.image }}
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: "/var/lib/mysql"
              name: {{ .Values.persistence.databaseVolumeName }}
          env:
{{ toYaml .Values.db.environment | indent 10 }}
        - name: seafile-memcached
          image: {{ .Values.memcached.image }}
          imagePullPolicy: Always
          command: ["memcached"]
          args: ["-m", "256"]
          ports:
          - name: memcached
            containerPort: 11211
            protocol: TCP
        - name: seafile
          image: {{ .Values.seafile.image }}
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: "/shared"
              name: {{ .Values.persistence.dataVolumeName }}
          env:
{{ toYaml .Values.seafile.environment | indent 10 }}
          ports:
          - name: http
            containerPort: 80
            protocol: TCP